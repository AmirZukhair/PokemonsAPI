{"version":3,"sources":["component/PokemonCard/Pcard.module.css","component/PokemonList/Plist.module.css","Preloader/Preloader.module.css","component/Header/Header.module.css","logo.svg","component/PokemonInfo/PokemonInfo.module.css","reducers/ApiPageReducer.js","redux/store.js","PokemonColor/PokemonColor.js","component/PokemonCard/PokemonCard.js","component/PokemonInfo/PokemonInfo.js","DAL/API.js","Preloader/Preloader.js","component/PokemonList/PokemonList.js","component/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","users","offset","pokemons","singlePokemon","ApiPageReducer","state","action","type","paks","offs","reducers","combineReducers","ApiPage","store","createStore","PokemonColor","bug","dragon","fairy","fire","ghost","ground","normal","pyschic","steel","dark","electric","fighting","flying","grass","ice","poison","rock","water","PokemonCard","name","picture","types","className","card","photo","src","alt","pokemonName","pokemonTypes","map","style","backgroundColor","PokemonInfo","separatePokemon","Close","Info","pokemonInfo","onClick","closeBtn","sprites","front_default","id","features","colspan","stats","base_stat","weight","moves","length","PokemonTitle","Pokemons","getAllPokemons","url","axios","then","response","data","getPokemon","Promise","resolve","reject","getSeparatePokemon","Preloader","P","preloader_wrapper","preloader_box","PokemonList","useState","setState","pokemonData","setPokemonData","next","setNex","setSeparatePokemon","isTrue","setTruth","Gloading","setGloading","loading","setLoading","useEffect","a","results","loadingPokemon","fethcData","all","pokemon","pokemonRecord","_pokemonData","List","container","Gridcontainer","Pokcontainer","p","isT","LoadBtn","Header","H","header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b35a1d64.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Pcard_card__2CKYw\",\"pokemonTypes\":\"Pcard_pokemonTypes__2gquE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Plist_container__160VQ\",\"Gridcontainer\":\"Plist_Gridcontainer__35qrA\",\"Pokcontainer\":\"Plist_Pokcontainer__1TbS6\",\"LoadBtn\":\"Plist_LoadBtn__13pf1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"Preloader_preloader_wrapper__1dWBe\",\"preloader_box\":\"Preloader_preloader_box__2Ne1Z\",\"preloader\":\"Preloader_preloader__1cg7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Npy_\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonInfo\":\"PokemonInfo_pokemonInfo__1X2Z6\",\"name\":\"PokemonInfo_name__1SlwD\",\"PokemonTitle\":\"PokemonInfo_PokemonTitle__1TNhy\",\"type\":\"PokemonInfo_type__Wabpo\",\"closeBtn\":\"PokemonInfo_closeBtn__23TpV\"};","\r\nconst SETUSERS = 'setUsers';\r\nconst POKEMON = 'POKEMON';\r\n\r\nconst PAK = 'PAK';\r\n\r\nconst OFF = 'OFF';\r\n\r\n\r\n\r\nlet initialState = {\r\n\tusers: [],\r\n  offset: 0,\r\n\tpokemons: 'bulbasaur',\r\n    singlePokemon: {}\r\n}\r\n\r\n\r\n\r\nconst ApiPageReducer = (state =initialState, action) => {\r\n     switch(action.type){\r\n     \tcase SETUSERS : \r\n     \treturn{\r\n     \t\t...state, users: [...state.users, ...action.users]\r\n     \t};\r\n\r\n     \tcase POKEMON :  \r\n     \t  return {\r\n             ...state, pokemons: action.pokemons\r\n     \t  };\r\n\r\n          case PAK :  \r\n          return {\r\n             ...state,singlePokemon: {...state.singlePokemon, ...action.paks}\r\n          };\r\n\r\n           case OFF :  \r\n          return {\r\n             ...state,offset: action.offs + 20\r\n                };\r\n\r\n     \tdefault: \r\n  return state;\r\n     }\r\n}\r\n\r\nexport let setUsers = (users) => ({type: SETUSERS, users});\r\nexport let setCurrentPokemon = (pokemons) => ({type: POKEMON, pokemons});\r\nexport let setSinglePokemon = (paks) => ({type: PAK, paks});\r\nexport let SetOffSet = (offs) => ({type: OFF, offs});\r\nexport default ApiPageReducer;\r\n\r\n","import {createStore,combineReducers} from 'redux'\r\nimport ApiPageReducer from '../reducers/ApiPageReducer'\r\nlet reducers = combineReducers ({\r\n\tApiPage: ApiPageReducer\r\n})\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","const PokemonColor = {\r\n    bug: '#d32f2f',\r\n    dragon: '#673ab7',\r\n    fairy: '#8c9eff',\r\n    fire: '#00695c',\r\n    ghost: '#388e3c',\r\n    ground: '#ffb300',\r\n    normal: '#ff8a65',\r\n    pyschic: '#4e342e',\r\n    steel: '#546e7a',\r\n    dark: '#fbe9e7',\r\n    electric: '#76ff03',\r\n    fighting: '#a30000',\r\n    flying: '#d81b60',\r\n    grass: '#836fa9',\r\n    ice: '#0093c4',\r\n    poison: '#00acc1',\r\n    rock: '#534bae',\r\n    water: '#f57f17'\r\n}\r\n\r\nexport default PokemonColor;","import React from 'react'\r\nimport card from './Pcard.module.css'\r\nimport PokemonColor from '../../PokemonColor/PokemonColor'\r\nconst PokemonCard = ({name,picture,types}) =>{\r\n  return (\r\n  \t<div className={card.card}>\r\n  \t<div className={card.photo}><img src={picture} alt=\"\"/></div>\r\n  \t<div className={card.pokemonName}>{name}</div>\r\n  \t<div className={card.pokemonTypes}>{types.map(type=><span style={{backgroundColor: PokemonColor[type.type.name]}}>{type.type.name}</span>)}</div>\r\n  \t</div>\r\n  \t)\r\n}\r\nexport default PokemonCard;","import React from 'react'\r\nimport Info from './PokemonInfo.module.css'\r\nconst PokemonInfo = ({separatePokemon,Close}) => {\r\n\tif(!separatePokemon){\r\n\t\treturn (\r\n\t\t\t<div  className={Info.PokemonTitle}>Click On Pokemon to see more</div>\r\n\t\t\t)\r\n\t} else{\r\n\t\treturn (\r\n\t\t<div className={Info.pokemonInfo}>\r\n\t\t<span onClick={()=>{Close(false)}} className={Info.closeBtn}></span>\r\n\t\t <div className={Info.picture}> <img src={separatePokemon.sprites.front_default} alt=\"\"/></div>\r\n\t\t  <div className={Info.name}>{separatePokemon.name} <span>{'#0' + separatePokemon.id}</span></div>\r\n\t\t   <div className={Info.features}>\r\n\t\t   <table>\r\n\t\t   <tr><td colspan=\"2\">Type</td> <td>{separatePokemon.types.map(type=><span  className={Info.type}>{type.type.name}</span>)}</td></tr>\r\n\t\t    <tr><td colspan=\"2\">Attack</td> <td>{separatePokemon.stats[1].base_stat}</td></tr>\r\n\t\t     <tr><td colspan=\"2\">Defence</td> <td>{separatePokemon.stats[2].base_stat}</td></tr>\r\n\t\t      <tr><td colspan=\"2\">HP</td> <td>{separatePokemon.stats[0].base_stat}</td></tr>\r\n\t\t       <tr><td colspan=\"2\">SP Attack</td> <td>{separatePokemon.stats[3].base_stat}</td></tr>\r\n\t\t        <tr><td colspan=\"2\">SP Defence</td> <td>{separatePokemon.stats[4].base_stat}</td></tr>\r\n\t\t         <tr><td colspan=\"2\">Speed</td> <td>{separatePokemon.stats[5].base_stat}</td></tr>\r\n\t\t          <tr><td colspan=\"2\">Weight</td> <td>{separatePokemon.weight}</td></tr>\r\n\t\t          <tr><td colspan=\"2\">Total Moves</td> <td>{separatePokemon.moves.length}</td></tr>\r\n\t\t   </table> \r\n\t\t   </div>\r\n\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default PokemonInfo;","import React from 'react'\r\nimport * as axios from 'axios'\r\nconst Pokemons = {\r\n\tgetAllPokemons(url){\r\n\t return\taxios.get(url).then(response=>response.data)\r\n\t},\r\n\r\n\tgetPokemon(url){\r\n\t return\tnew Promise((resolve,reject)=>{\r\n\t \taxios(url)\r\n\t \t.then(response => {\r\n\t \t\tresolve(response)\r\n\t \t})\r\n\t })\r\n\t},\r\n\r\n\tgetSeparatePokemon(id){\r\n\t return\taxios('https://pokeapi.co/api/v2/pokemon/' + id)\r\n\t \t.then(response =>response.data)\r\n\t \r\n\t}\r\n\r\n}\r\n\r\nexport default Pokemons;","import React from 'react'\r\nimport P from './Preloader.module.css'\r\n\r\n\r\nconst Preloader = () => {\r\n\r\n\treturn(\r\n\t\t<div className={P.preloader_wrapper}>\r\n\t\t <div className={P.preloader_box}>\t\t\r\n\t\t </div>\r\n\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Preloader","import React, {useEffect,useState} from 'react'\r\nimport PokemonCard from '../PokemonCard/PokemonCard'\r\nimport * as axios from 'axios'\r\nimport List from './Plist.module.css'\r\nimport PokemonInfo from '../PokemonInfo/PokemonInfo'\r\nimport Pokemons from '../../DAL/API'\r\nimport Preloader from '../../Preloader/Preloader'\r\nconst PokemonList = () =>{\r\n\r\nconst [state,setState] = useState([]);\r\nconst [pokemonData,setPokemonData] = useState([]);\r\nconst [next,setNex] = useState();\r\nconst [separatePokemon,setSeparatePokemon] = useState(null);\r\nconst [isTrue, setTruth] = useState(true);\r\nconst [Gloading,setGloading] = useState();\r\nconst [loading,setLoading] = useState();\r\n\r\nconst url = 'https://pokeapi.co/api/v2/pokemon';\r\n\r\n    useEffect(()=>{\r\n    async function fethcData()  {\r\n     setGloading(true)\r\n    let response = await Pokemons.getAllPokemons(url); \t\r\n    \tsetState(response.results);\r\n    \tsetNex(response.next);\r\n     let pokemon = await loadingPokemon(response.results);\r\n    setGloading(false)\t  \t\r\n}\r\n\r\nfethcData();\r\n     },[])\r\n\r\n const loadingPokemon = async (data) => {\r\n \tlet _pokemonData = await Promise.all(data.map( async pokemon =>{\r\n \t\tlet pokemonRecord = await Pokemons.getPokemon(pokemon.url);\r\n \t\treturn pokemonRecord;\r\n \t})\r\n \t); \r\n      setPokemonData([...pokemonData,..._pokemonData]);\r\n }\r\n \r\n\r\n   let LoadMore = () =>{\r\n    setTruth(true);\r\n Pokemons.getAllPokemons(next).then(data=>{\t\t\r\n    \tsetState([...state,...data.results]);\r\n    \tsetNex(data.next);\r\n    \tlet pokemon = loadingPokemon(data.results);\t \r\n    \t})\r\n    }\r\n\r\n    let SinglePokemon = (id) =>{\r\n        setTruth(true);\r\n         setLoading(true);\r\n       Pokemons.getSeparatePokemon(id).then(data =>{          \r\n             setSeparatePokemon(data);\r\n             setLoading(false)\r\n        })\r\n    }\r\n\r\n    let Close =  (isT) => {\r\n        setTruth(isT);\r\n    }\r\n\r\n    if(Gloading){\r\n      return  <Preloader/>\r\n    }\r\n\r\n\treturn (\r\n\r\n        <div className={List.container}> \r\n\t\t<div className={List.Gridcontainer}>\r\n        <div className={List.Pokcontainer}>\r\n\t\t{pokemonData.map(p=><div onClick={()=>{SinglePokemon(p.data.id)}}><PokemonCard name={p.data.name} picture={p.data.sprites.front_default} types={p.data.types} /></div> )}\r\n        </div>       \r\n    <div>\r\n    {\r\n        loading \r\n        ? <Preloader/>\r\n        : isTrue ? <PokemonInfo separatePokemon={separatePokemon} Close={Close}/> : null \r\n    }    \r\n </div>\r\n {\r\n        loading \r\n        ? <Preloader/>\r\n        :  <button  className={List.LoadBtn} onClick={()=>{\r\n          LoadMore();\r\n        }}>LoadMore</button>\r\n    }\r\n\t\r\n\t</div>  \r\n        </div>\r\n\t\t)\r\n}\r\n\r\nexport default PokemonList;","import React from 'react'\r\nimport H from './Header.module.css'\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className={H.header}>\r\n\t\tPokedex\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport PokemonList from './component/PokemonList/PokemonList'\nimport Header from './component/Header/Header'\nimport {BrowserRouter,Route} from 'react-router-dom'\n\nfunction App() {\n  return <div>\n           <Header/>\n           <PokemonList/>\n    </div>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport {Provider} from 'react-redux'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter,Route} from 'react-router-dom'\nReactDOM.render(\n\t<BrowserRouter>\n\t<Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>\n   </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}